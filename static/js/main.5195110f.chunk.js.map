{"version":3,"sources":["images/dallas.webp","images/austin.webp","images/newyork.webp","images/sanfrancisco.webp","images/beijing.webp","components/Animations.js","components/Hamburger.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","handleHover","e","gsap","to","target","duration","y","skewX","ease","handleHoverExit","cities","name","image","dallas","austin","newyork","sanfrancisco","beijing","Hamburger","state","menuLayer","useRef","reveal1","reveal2","cityBackground","line1","line2","line3","useEffect","node1","node2","clicked","height","stagger","amount","css","display","initial","opacity","from","transformOrigin","skewY","staggerReveal","node3","delay","staggerText","ref","el","className","onMouseEnter","onMouseOut","map","key","city","background","withRouter","history","useState","menuName","setState","disabled","setDisabled","listen","disableMenu","setTimeout","onClick","Opportunities","Solutions","Contact","Home","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5195110f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dallas.2bc38187.webp\";","module.exports = __webpack_public_path__ + \"static/media/austin.a7aadf33.webp\";","module.exports = __webpack_public_path__ + \"static/media/newyork.ebb81965.webp\";","module.exports = __webpack_public_path__ + \"static/media/sanfrancisco.b58ad59e.webp\";","module.exports = __webpack_public_path__ + \"static/media/beijing.209dcd10.webp\";","import gsap from \"gsap\";\n\n// OPEN MENU\nexport const staggerReveal = (node1, node2) => {\n  gsap.from([node1, node2], {\n    duration: 0.8,\n    height: 0,\n    transformOrigin: \"right top\",\n    skewY: 2,\n    ease: \"power3.inOut\",\n    stagger: {\n      amount: 0.1\n    }\n  });\n};\n\n// CLOSE MENU\nexport const staggerRevealClose = (node1, node2) => {\n  gsap.to([node1, node2], {\n    duration: 0.8,\n    height: 0,\n    ease: \"power3.inOut\",\n    stagger: {\n      amount: 0.07\n    }\n  });\n};\n\n// STAGGER THE LINKS TO APPEAR\nexport const staggerText = (node1, node2, node3) => {\n  gsap.from([node1, node2, node3], {\n    duration: 0.8,\n    y: 100,\n    delay: 0.1,\n    ease: \"power3.inOut\",\n    stagger: {\n      amount: 0.3\n    }\n  });\n};\n\n// Fade up for the additonal info on our menu\nexport const fadeInUp = node => {\n  gsap.from(node, {\n    y: 60,\n    duration: 1,\n    delay: 0.2,\n    opacity: 0,\n    ease: \"power3.inOut\"\n  });\n};\n\n// Hover on the link\nexport const handleHover = e => {\n  gsap.to(e.target, {\n    duration: 0.3,\n    y: 3,\n    skewX: 4,\n    ease: \"power1.inOut\"\n  });\n};\n\n// Hover off the link\nexport const handleHoverExit = e => {\n  gsap.to(e.target, {\n    duration: 0.3,\n    y: -3,\n    skewX: 0,\n    ease: \"power1.inOut\"\n  });\n};\n\n// adds city image once you hover on\nexport const handleCity = (city, target) => {\n  gsap.to(target, {\n    duration: 0,\n    background: `url(${city}) center center`\n  });\n  gsap.to(target, {\n    duration: 0.4,\n    opacity: 1,\n    ease: \"power3.inOut\"\n  });\n  gsap.from(target, {\n    duration: 0.4,\n    skewY: 2,\n    transformOrigin: \"right top\"\n  });\n};\n\n// Removes the city image once you hover off\nexport const handleCityReturn = target => {\n  gsap.to(target, {\n    duration: 0,\n    skewY: 0\n  });\n  gsap.to(target, {\n    duration: 0.4,\n    opacity: 0,\n    skewY: 0\n  });\n};\n","import React, { useRef, useEffect } from \"react\";\nimport { gsap } from \"gsap\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  staggerText,\n  staggerReveal,\n  // fadeInUp,\n  handleHover,\n  handleHoverExit,\n  handleCityReturn,\n  handleCity,\n  staggerRevealClose\n} from \"./Animations\";\n\nimport dallas from \"../images/dallas.webp\";\nimport austin from \"../images/austin.webp\";\nimport newyork from \"../images/newyork.webp\";\nimport sanfrancisco from \"../images/sanfrancisco.webp\";\nimport beijing from \"../images/beijing.webp\";\n\nconst cities = [\n  { name: \"Dallas\", image: dallas },\n  { name: \"Austin\", image: austin },\n  { name: \"New York\", image: newyork },\n  { name: \"San Francisco\", image: sanfrancisco },\n  { name: \"Beijing\", image: beijing }\n];\n\nconst Hamburger = ({ state }) => {\n  // Create varibles of our dom nodes\n  let menuLayer = useRef(null);\n  let reveal1 = useRef(null);\n  let reveal2 = useRef(null);\n  let cityBackground = useRef(null);\n  let line1 = useRef(null);\n  let line2 = useRef(null);\n  let line3 = useRef(null);\n  // let info = useRef(null);\n\n  useEffect(() => {\n    // If the menu is open and we click the menu button to close it.\n    if (state.clicked === false) {\n      // If menu is closed and we want to open it.\n\n      staggerRevealClose(reveal2, reveal1);\n      // Set menu to display none\n      gsap.to(menuLayer, { duration: 1, css: { display: \"none\" } });\n    } else if (\n      state.clicked === true ||\n      (state.clicked === true && state.initial === null)\n    ) {\n      // Set menu to display block\n      gsap.to(menuLayer, { duration: 0, css: { display: \"block\" } });\n      //Allow menu to have height of 100%\n      gsap.to([reveal1, reveal2], {\n        duration: 0,\n        opacity: 1,\n        height: \"100%\"\n      });\n      staggerReveal(reveal1, reveal2);\n      // fadeInUp(info);\n      staggerText(line1, line2, line3);\n    }\n  }, [state]);\n\n  return (\n    <div ref={el => (menuLayer = el)} className='hamburger-menu'>\n      <div\n        ref={el => (reveal1 = el)}\n        className='menu-secondary-background-color'></div>\n      <div ref={el => (reveal2 = el)} className='menu-layer'>\n        <div\n          ref={el => (cityBackground = el)}\n          className='menu-city-background'></div>\n        <div className='container'>\n          <div className='wrapper'>\n            <div className='menu-links'>\n              <nav>\n                <ul>\n                  <li>\n                    <Link\n                      onMouseEnter={e => handleHover(e)}\n                      onMouseOut={e => handleHoverExit(e)}\n                      ref={el => (line1 = el)}\n                      to='/opportunities'>\n                      Opportunities\n                    </Link>\n                  </li>\n                  <li>\n                    <Link\n                      onMouseEnter={e => handleHover(e)}\n                      onMouseOut={e => handleHoverExit(e)}\n                      ref={el => (line2 = el)}\n                      to='/solutions'>\n                      Solutions\n                    </Link>\n                  </li>\n                  <li>\n                    <Link\n                      onMouseEnter={e => handleHover(e)}\n                      onMouseOut={e => handleHoverExit(e)}\n                      ref={el => (line3 = el)}\n                      to='/contact-us'>\n                      Contact us\n                    </Link>\n                  </li>\n                </ul>\n              </nav>\n              {/* <div ref={el => (info = el)} className='info'>\n                <h3>Our Promise</h3>\n                <p>\n                  The passage experienced a surge in popularity during the 1960s\n                  when Letraset used it on their dry-transfer sheets, and again\n                  during the 90s as desktop publishers bundled the text with\n                  their software.\n                </p>\n              </div> */}\n              <div className='locations'>\n                <div>Locations:</div>\n                {/* Returning the list of cities */}\n                {cities.map(el => (\n                  <span\n                    key={el.name}\n                    onMouseEnter={() => handleCity(el.image, cityBackground)}\n                    onMouseOut={() => handleCityReturn(cityBackground)}>\n                    {el.name}\n                  </span>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Hamburger;\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport Hamburger from \"./Hamburger\";\n\nconst Header = ({ history }) => {\n  // State of our Menu\n  const [state, setState] = useState({\n    initial: false,\n    clicked: null,\n    menuName: \"Menu\"\n  });\n  // State of our button\n  const [disabled, setDisabled] = useState(false);\n\n  //Use Effect\n  useEffect(() => {\n    //Listening for page changes.\n    history.listen(() => {\n      setState({ clicked: false, menuName: \"Menu\" });\n    });\n  }, [history]);\n\n  // Toggle menu\n  const handleMenu = () => {\n    disableMenu();\n    if (state.initial === false) {\n      setState({\n        initial: null,\n        clicked: true,\n        menuName: \"Close\"\n      });\n    } else if (state.clicked === true) {\n      setState({\n        clicked: !state.clicked,\n        menuName: \"Menu\"\n      });\n    } else if (state.clicked === false) {\n      setState({\n        clicked: !state.clicked,\n        menuName: \"Close\"\n      });\n    }\n  };\n\n  //Determine if out menu button should be disabled\n  const disableMenu = () => {\n    setDisabled(!disabled);\n    setTimeout(() => {\n      setDisabled(false);\n    }, 1200);\n  };\n\n  return (\n    <header>\n      <div className=\"container\">\n        <div className=\"wrapper\">\n          <div className=\"inner-header\">\n            <div className=\"logo\">\n              <Link to=\"/\">LOGO.</Link>\n            </div>\n            <div className=\"menu\">\n              <button disabled={disabled} onClick={handleMenu}>\n                {state.menuName}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Hamburger state={state} />\n    </header>\n  );\n};\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport \"./App.scss\";\n\nimport Header from \"./components/Header\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <div className=\"container\">\n          <div className=\"wrapper\">\n            <div className=\"home\">\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/opportunities\" component={Opportunities} />\n                <Route exact path=\"/solutions\" component={Solutions} />\n                <Route exact path=\"/contact-us\" component={Contact} />\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nfunction Opportunities() {\n  return <p>Discover our numerous opportunities</p>;\n}\n\nfunction Solutions() {\n  return <p>Solutions that help you.</p>;\n}\n\nfunction Contact() {\n  return <p>Feel free to reach us.</p>;\n}\n\nfunction Home() {\n  return (\n    <div className=\"container\">\n      <div className=\"wrapper\">\n        <h5>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n        </h5>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}